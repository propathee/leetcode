package com.leetcode.leetcode_389_Find_the_Difference_Easy;

import java.util.Arrays;

public abstract class Solution389 {
    /**
     * You are given two strings s and t.
     * <p>
     * String t is generated by random shuffling string s and then add one more letter at a random position.
     * @param s 0 <= s.length <= 1000
     * @param t t.length == s.length + 1. s and t consist of lower-case English letters.
     * @return the letter that was added to t.
     */
    public abstract char findTheDifference(String s, String t);

    static Solution389 newSolution() {
        return new S4();
    }

    static class S1 extends Solution389 {
        @Override
        public char findTheDifference(String s, String t) {
            int[] dict = new int[26];
            for (char c : s.toCharArray()) {
                dict[c - 'a']++;
            }
            for (char c : t.toCharArray()) {
                if (--dict[c - 'a'] < 0) {
                    return c;
                }
            }
            return 0;
        }
    }

    static class S2 extends Solution389 {
        @Override
        public char findTheDifference(String s, String t) {
            char[] sc = s.toCharArray();
            char[] tc = t.toCharArray();
            Arrays.sort(sc);
            Arrays.sort(tc);
            int i = 0;
            for (; i < sc.length; i++) {
                if (sc[i] != tc[i]) {
                    break;
                }
            }
            return tc[i];
        }
    }

    static class S3 extends Solution389 {
        @Override
        public char findTheDifference(String s, String t) {
            char c = t.charAt(t.length() - 1);
            for (int i = 0; i < s.length(); i++) {
                c ^= s.charAt(i);
                c ^= t.charAt(i);
            }
            return c;
        }
    }

    static class S4 extends Solution389 {
        @Override
        public char findTheDifference(String s, String t) {
            int code = t.charAt(s.length());
            for (int i = 0; i < s.length(); i++) {
                code += t.charAt(i);
                code -= s.charAt(i);
            }
            return (char) code;
        }
    }
}
